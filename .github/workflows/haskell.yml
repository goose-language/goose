name: Build binary artifacts

on:
  push:
    tags:
      - weekly.**
      - 0.**
      
permissions:
  contents: write

jobs:

  build-linux:
    runs-on: ubuntu-20.04
    env:
      ZIPNAME: goose_linux.zip
    steps:
      - uses: actions/checkout@master
      - uses: haskell/actions/setup@v2
        with:
          ghc-version: '8.10.7'
          cabal-version: '3.10'
      - uses: actions/checkout@v1
      - name: Compile
        run: |
          cabal build
      - name: Create ZIP archive
        run: |
          find dist-newstyle -type f -name 'goose' -exec mv '{}' goose \;
          zip -r $ZIPNAME goose std README.md
      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux
          path: goose_linux.zip

  build-macos:
    runs-on: macos-latest
    env:
      ZIPNAME: goose_macos.zip
    steps:
      - uses: actions/checkout@master
      - uses: haskell/actions/setup@v2
        with:
          ghc-version: '8.10.7'
          cabal-version: '3.10'
      - uses: actions/checkout@v1
      - name: Compile
        run: |
          cabal build
      - name: Create ZIP archive
        run: |
          find dist-newstyle -type f -name 'goose' -exec mv '{}' goose \;
          zip -r $ZIPNAME goose std README.md
      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: macos
          path: goose_macos.zip

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - uses: haskell/actions/setup@v2
        with:
          ghc-version: '8.10.7'
          cabal-version: '3.10'
      - uses: actions/checkout@v1
      - name: Compile
        run: |
          cabal build
      - name: Create ZIP archive
        run: |
          Get-ChildItem -Filter goose.exe -Recurse $pwd | Foreach {mv $_.fullname goose.exe}
          Compress-Archive -CompressionLevel Optimal -Force -Path goose.exe, std, README.md -DestinationPath goose_windows.zip
      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: goose_windows.zip

  publish:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        version: [linux, macos, windows]
    steps:
      - uses: actions/checkout@v1
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: goose_${{ matrix.version }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_REPOSITORY: goose-language/goose

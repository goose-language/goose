on:
  schedule:
    - cron: '0 12 * * 6'
  push:
    branches: [ "main" ]
jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    
    name: Compile goose on Linux
    steps:
      - uses: actions/checkout@master
      - uses: haskell/actions/setup@v1.2
        with:
          ghc-version: 9.4.2
          cabal-version: 3.0
      
      - name: Compile and ZIP goose on Unix
        if: matrix.platform != 'windows-latest'
        run: |
          cabal build
          find dist-newstyle -type f -name 'goose' -exec mv '{}' goose \;
          zip -r 'goose-${{ matrix.platform }}.zip' goose std README.md
          
      - name: Compile and ZIP goose on Windows
        if: matrix.platform == 'windows-latest'
        run: |
          cabal build
          Get-ChildItem -Filter goose.exe -Recurse $pwd | Foreach {mv $_.fullname goose.exe}
          Compress-Archive -CompressionLevel Optimal -Force -Path goose.exe, std, README.md -DestinationPath 'goose-${{ matrix.platform }}.zip' 
  
      - name: Release Drafter
        # You may pin to the exact commit or the version.
        # uses: release-drafter/release-drafter@6df64e4ba4842c203c604c1f45246c5863410adb
        uses: release-drafter/release-drafter@v5.21.1
        with:
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - uses: AButler/upload-release-assets@v2.0
        with:
          files: './goose-${{ matrix.platform }}.zip'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
